{
  "openapi": "3.1.0",
  "info": {
    "version": "0.3.6",
    "title": "Bluecherry Server API",
    "description": "The Bluecherry Server API allows users to use software to create custom intergrations with Blucherry DVR",
    "contact": {
      "name": "Bluecherry Team",
      "email": "support@bluecherrydvr.com",
      "url": "https://github.com/bluecherrydvr/"
    },
    "license": {
      "name": "AGPL-2.0",
      "url": "https://github.com/bluecherrydvr/bluecherry-api/blob/master/LICENSE"
    }
  },
  "servers": [
    {
      "url": "http://localhost:4000/",
      "description": "Blucherry Server"
    }
  ],
  "paths": {
    "/devices": {
      "post": {
        "tags": ["Devices"],
        "summary": "Add a new device",
        "operationId": "addDevice",
        "security": [{"basicAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addDeviceBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Device created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deviceId": {"type": "integer"}
                  }
                }
              }
            }
          },
          "400": {"description": "Invalid request body"},
          "409": {"description": "Device already exists"}
        }
      }
    },
    "/devices/{format}": {
      "get": {
        "tags": ["Devices"],
        "summary": "Get all devices",
        "operationId": "getDevices",
        "security": [{"basicAuth": []}],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["json", "xml"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of devices",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "devices": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/device"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/devices/{deviceId}/{format}": {
      "get": {
        "tags": ["Devices"],
        "summary": "Get a specific device",
        "operationId": "getDevice",
        "security": [{"basicAuth": []}],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          },
          {
            "name": "format",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["json", "xml"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Device information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/device"
                }
              }
            }
          },
          "404": {"description": "Device not found"}
        }
      }
    },
    "/devices/{deviceId}": {
      "delete": {
        "tags": ["Devices"],
        "summary": "Delete a device",
        "operationId": "deleteDevice",
        "security": [{"basicAuth": []}],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {"description": "Device deleted successfully"},
          "404": {"description": "Device not found"}
        }
      },
      "put": {
        "tags": ["Devices"],
        "summary": "Update a device",
        "operationId": "updateDevice",
        "security": [{"basicAuth": []}],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateDeviceBody"
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Device updated successfully"},
          "400": {"description": "Invalid request body"},
          "404": {"description": "Device not found"},
          "409": {"description": "Device with same name already exists"}
        }
      }
    },
    "/events/": {
      "get": {
        "tags": ["Events"],
        "summary": "Get all events",
        "operationId": "getEvents",
        "security": [{"basicAuth": []}],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {"type": "integer"}
          },
          {
            "name": "device",
            "in": "query",
            "schema": {"type": "integer"}
          },
          {
            "name": "start",
            "in": "query",
            "schema": {"type": "integer"}
          },
          {
            "name": "end",
            "in": "query",
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "List of events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "events": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/event"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/events/{eventId}": {
      "get": {
        "tags": ["Events"],
        "summary": "Get a specific event",
        "operationId": "getEvent",
        "security": [{"basicAuth": []}],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Event information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/event"
                }
              }
            }
          },
          "404": {"description": "Event not found"}
        }
      }
    },
    "/media/{mediaId}": {
      "get": {
        "tags": ["Media"],
        "summary": "Get media file",
        "operationId": "getMedia",
        "security": [{"basicAuth": []}],
        "parameters": [
          {
            "name": "mediaId",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Media file",
            "content": {
              "video/mp4": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "Content-Duration": {
                "schema": {
                  "type": "string",
                  "description": "Video duration in format HH:MM:SS"
                }
              }
            }
          },
          "404": {"description": "Media not found"}
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}
